diagram InterchangeAddressClassProfile {
  title 'InterchangeAddressClassProfile overview'
  caption 'InterchangeAddressClassProfile model'
  association {
    owner InterchangeAddressClassProfile
    member_type direct
    member AddressClassProfile
  }
  association {
    owner FormTemplate
    member_type direct
    member DisplayTemplate
  }
  association {
    owner DisplayTemplate
    member_type direct
    member AttributeProfileSignature
  }
  association {
    owner AttributeProfileSignature
    member_type direct
    member AttributeProfileAddressFeature
  }
  association {
    owner AttributeProfileAddressFeature
    member_type direct
    member AttributeProfileValidity
  }
  association {
    owner InterchangeAddressClassProfile
    member_type direct
    member AttributeProfileSignature
  }
  association {
    owner AttributeProfileAddressFeature
    member_type direct
    member AttributeProfile
  }
  class AddressClassProfile {
    definition {
  An `AddressClassProfile` represents a profile of a `ProfileCompliantAddress`.
It corresponds to the concept of an `AddressClass` originally
expressed in <<ISO19160-1>> as a referenced codelist.

It represents additional attributes and restrictions to the
`ProfileCompliantAddress` model. It also represents metadata for the use of
the profile.

A single profile can include and support multiple types of
address formats, such as a numbered street address and a
"`PO Box`" address simultaneously. Each of these address formats
is represented as an interchange address class.

[example]
--
The US Numbered Thoroughfare Address with this syntax can be
represented as an address class profile:

*\{sp\}\{ Complete Landmark Name or Complete Place Name \} +
*\{sp\}\{ Complete Address Number * \} +
*\{sp\}\{ Complete Street Name * \} +
*\{sp\}\{ Complete Subaddress \} +
*\{sp\}\{ Complete Place Name * \} +
*\{sp\}\{ State Name * \} +
*\{sp\}\{ Zip Code \} +
*\{sp\}\{ Zip Plus 4 \} +
*\{sp\}\{ Country Name \}
--

}
    +id: CharacterString {
  definition {
  Unique identifier of this AddressClassProfile.
  }
}
    +type: CharacterString {
  definition {
  Intended usage of this profile.
  }
}
    +description: CharacterString {
  definition {
  Textual description of this profile.
  }
}
    +localization: Localization {
  definition {
  The language and script used within this profile.
  }
}
    +signature: Signature [0..1]{
  definition {
  The digital signature to verify the integrity of this profile, and the identity of the publishing authority.
  }
}
    +areaApplicability: iso19115MD_SpatialRepresentation [0..*]{
  definition {
  The geographic representation of which this AddressClassProfile applies to. Overlapping geographic areas are allowed across different profiles.
  }
}
    +timeToLive: Integer {
  definition {
  The maximum time interval between refreshing of this profile via an authoritative source, in seconds.
  }
}
    +validity: Validity {
  definition {
  The period of date and time that this profile should be considered as valid.
  }
}
  }
  association {
    owner_type aggregation
    owner AddressClassProfile#addressClassProfile
    member_type direct
    member AttributeProfile#attributeProfile [0..*]
  }
  association {
    owner AddressClassProfile
    member_type direct
    member ProfileCompliantAddress
  }
  class InterchangeAddressClassProfile {
    definition {
  This `InterchangeAddressClassProfile` extends from `AddressClassProfile` to
enforce the existence of several subclasses of `AttributeProfile` for
interchange.

It also introduces `FormTemplate` and `DisplayTemplate` to
to allow the display, entry of, and the interchange of an
`ProfileCompliantAddress` (address
instance complying with an `InterchangeAddressClassProfile`).

}
  }
  association {
    owner_type aggregation
    owner InterchangeAddressClassProfile#attributeProfile
    member_type direct
    member AttributeProfileAddressFeature#addressClassProfile
  }
  association {
    owner_type aggregation
    owner InterchangeAddressClassProfile#attributeProfile
    member_type direct
    member AttributeProfileValidity#addressClassProfile
  }
  association {
    owner_type aggregation
    owner InterchangeAddressClassProfile
    member_type direct
    member FormTemplate#formTemplate [0..*]
  }
  association {
    owner_type aggregation
    owner InterchangeAddressClassProfile
    member_type direct
    member DisplayTemplate#displayTemplate [0..*]
  }
  class DisplayTemplate {
    definition {
  The display template is used for displaying an
interchange address instance belonging to an interchange
address class. Generally, one address class is represented
by one display template.

}
  }
  association {
    owner DisplayTemplate
    member_type inheritance
    member LayoutTemplate
  }
  association {
    owner_type composition
    owner DisplayTemplate
    member_type direct
    member DisplayLine#formLine [1..*]
  }
  class FormTemplate {
    definition {
  This section shows how an input form can be rendered according to
the interchange address class.

The form template should use should also provide an example for display
purposes in input (e.g., Help section).

The form template is used for displaying an input form for entry of address data into an
interchange address instance.
Generally, one address class is represented by one input template.

NOTE: This part has no equivalence in PATDL.

}
  }
  association {
    owner FormTemplate
    member_type inheritance
    member LayoutTemplate
  }
  association {
    owner_type composition
    owner FormTemplate
    member_type direct
    member FormLine#formLine [1..*]
  }
  class Signature {
    definition {
  AttributeProfileSignature extends from AttributeProfile to represent the signature
attribute of the object it belongs to.

}
  }
  association {
    owner Signature
    member_type inheritance
    member AttributeProfile
  }
  class AddressFeature {
    definition {
  AttributeProfileAddressFeature extends from AttributeProfile to represent the
feature attribute of the object it belongs to.

}
  }
  association {
    owner AddressFeature
    member_type inheritance
    member AttributeProfile
  }
  class Validity {
    definition {
  AttributeProfileValidity extends from AttributeProfile to represent the validity
attribute of the object it belongs to.

}
  }
  association {
    owner Validity
    member_type inheritance
    member AttributeProfile
  }
  class AttributeProfile {
    definition {
  An `AttributeProfile` represents name, cardinalities and value type of an
attribute in a model that complies with a profile that includes this
AttributeProfile.

If it represents an attribute that has been previously defined, e.g. an
attribute in Address model defined in <<ISO19160-1>>, it extends the
definition of the attribute by redefining the name, cardinalities and value
type.

}
    +name: CharacterString {
  definition {
  The name of the attribute represented by this AttributeProfile.
  }
}
    +minCardinality: Integer [0..1]{
  definition {
  The minimum number of occurrences of the attribute represented by this AttributeProfile.
  }
}
    +maxCardinality: Integer [0..1]{
  definition {
  The maximum number of occurences of the attribute represented by this AttributeProfile.
  }
}
    +valueType: CharacterString [0..1]{
  definition {
  The data type of values of the attribute represented by this AttributeProfile.
  }
}
  }
}
