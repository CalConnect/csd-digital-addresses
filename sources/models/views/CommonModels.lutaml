diagram CommonModels {
  title 'Common models'
  caption 'Common models to be used in this standard'
  class Localization {
    definition {
      Represents localization metadata of the parent object.

      Realized using a `PT_Locale` object defined in <<ISO19115-1>>,
      a script code from <<ISO15924>>, a writing system code
      from <<ISO24229>>, and indication of text direction.

    }
    +locale: iso19115PT_Locale {
        definition {
        The locale of the parent object.
        }
      }
    +script: iso15924Code {
  definition {
  The type of written script used in the parent object.
  }
}
    +writingSystem: iso24229Code {
  definition {
  The type of writing system used in the parent object.
  }
}
    +textDirection: TextDirectionCode {
  definition {
  Indicating in which direction the text of the parent should be read.
  }
}
  }
  class Validity {
    definition {
  The time interval where an object is considered valid, with a revision number for issuance date/time.

}
    +validityBegins: iso19115CI_Date {
  definition {
  The date and time when validity starts.
  }
}
    +validityEnds: iso19115CI_Date {
  definition {
  The date and time when validity ends.
  }
}
    +revision: iso19115CI_Date {
  definition {
  Issuance date/time.
  }
}
  }
  class Signature {
    definition {
  A cryptographic signature used to determine data integrity and validity of the object it belongs to.

}
    +algorithm: iso14888Oid {
  definition {
  The public key cryptographic algorithm used for this digital signature.
  }
}
    +publicKey: Uri {
  definition {
  A reference to the actual public key used to verify the digital signature, a URI where the public key of the signer used for this signature is found.
  }
}
    +signature: CharacterString {
  definition {
  The actual digital signature value encoded in Base64 format.
  }
}
  }
  enum TextDirectionCode {
    definition {
  An enumeration value of TextDirectionCode represents the reading
direction of textual data whether it is from left to right or right to
left, and from top to bottom or bottom to top.

}
    leftToRightTopToBottom{
  definition {
  Indicating that text should be read left to right, and top to bottom.
  }
}
    rightToLeftTopToBottom{
  definition {
  Indicating that text should be read right to left, and top to bottom.
  }
}
    leftToRightBottomToTop{
  definition {
  Indicating that text should be read left to right, and bottom to top.
  }
}
    rightToLeftBottomToTop{
  definition {
  Indicating that text should be read right to left, and bottom to top.
  }
}
  }
}
